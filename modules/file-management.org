#+TITLE: File Management Module
#+AUTHOR: Chris
#+DESCRIPTION: Enhanced file browsing and management
#+STARTUP: overview

* File Management Module

** Treemacs Setup
#+BEGIN_SRC emacs-lisp
;; Install treemacs packages
(unless (package-installed-p 'treemacs)
  (package-install 'treemacs))

(unless (package-installed-p 'treemacs-projectile)
  (package-install 'treemacs-projectile))

(require 'treemacs)
(require 'treemacs-projectile)

;; Basic treemacs configuration
(setq treemacs-width 35
      treemacs-follow-after-init t
      treemacs-show-hidden-files t)

;; Key bindings
(global-set-key (kbd "M-0") 'treemacs-select-window)
(global-set-key (kbd "C-x t t") 'treemacs)
(global-set-key (kbd "C-x t C-t") 'treemacs-find-file)

;; Auto-follow and sync
(treemacs-follow-mode t)
(treemacs-filewatch-mode t)
#+END_SRC

** Everything Search (Windows)
#+BEGIN_SRC emacs-lisp
(when (eq system-type 'windows-nt)
  ;; Simple everything search
  (defun everything-search ()
    "Search files using Everything."
    (interactive)
    (let* ((query (read-string "Everything search: "))
           (results (when (> (length query) 0)
                      (split-string
                       (shell-command-to-string (format "C:\\Users\\chris\\es.exe -n 20 \"%s\"" query))
                       "\n" t))))
      (if results
          (let ((choice (completing-read "Select file: " results)))
            (when choice
              (if (file-exists-p choice)
                  (find-file choice)
                (message "File not found: %s" choice))))
        (message "No results found for: %s" query))))

  (global-set-key (kbd "C-c s") 'everything-search))
#+END_SRC

** Tests
#+BEGIN_SRC emacs-lisp
(defun test-file-management-module ()
  "Test file management module."
  (interactive)
  (let ((results '()))

    ;; Test treemacs
    (if (featurep 'treemacs)
        (push "treemacs: LOADED" results)
      (push "treemacs: NOT LOADED" results))

    ;; Test everything search (Windows only)
    (when (eq system-type 'windows-nt)
      (if (fboundp 'everything-search)
          (push "everything-search: DEFINED" results)
        (push "everything-search: MISSING" results)))

    ;; Display results
    (with-current-buffer (get-buffer-create "*File Management Test*")
      (erase-buffer)
      (insert "=== File Management Test ===\n\n")
      (dolist (result (reverse results))
        (insert (format "%s\n" result)))
      (display-buffer (current-buffer)))

    (message "File management test completed")))
#+END_SRC